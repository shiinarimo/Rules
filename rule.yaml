- RULE-SET,Reject,Reject
- RULE-SET,Special,DIRECT

- RULE-SET,Spotify,音乐
- RULE-SET,Soundcloud,音乐

- RULE-SET,YouTube Music,YouTube
- RULE-SET,YouTube,YouTube

- RULE-SET,Disney Plus,视频

- RULE-SET,Netflix,视频
- RULE-SET,Niconico,视频

- RULE-SET,ABC,视频
- RULE-SET,Abema TV,视频
- RULE-SET,Amazon,Amazon
- RULE-SET,Apple News,视频
- RULE-SET,Apple TV,视频
- RULE-SET,Bahamut,视频
- RULE-SET,BBC iPlayer,视频
- RULE-SET,DAZN,视频
- RULE-SET,Discovery Plus,视频
- RULE-SET,encoreTVB,视频
- RULE-SET,Fox Now,视频
- RULE-SET,Fox+,视频
- RULE-SET,HBO,视频
- RULE-SET,Hulu Japan,视频
- RULE-SET,Hulu,视频
- RULE-SET,Japonx,视频
- RULE-SET,JOOX,视频
- RULE-SET,KKBOX,视频
- RULE-SET,KKTV,视频
- RULE-SET,Line TV,视频
- RULE-SET,myTV SUPER,视频
- RULE-SET,Pandora,视频
- RULE-SET,PBS,视频
- RULE-SET,Pornhub,视频
- RULE-SET,ViuTV,视频

- RULE-SET,Telegram,SNS
- RULE-SET,Discord,SNS
- RULE-SET,Facebook,SNS
- RULE-SET,Twitter,SNS

- RULE-SET,Steam,Steam
- RULE-SET,Speedtest,测速
- RULE-SET,PayPal,PayPal
- RULE-SET,Microsoft,Microsoft

- RULE-SET,PROXY,Proxy

- RULE-SET,Apple,Apple

- RULE-SET,Scholar,学术


- RULE-SET,Bilibili,境内服务
- RULE-SET,iQiyi,境内服务
- RULE-SET,Letv,境内服务
# - RULE-SET,MOO,境内服务
- RULE-SET,Netease Music,境内服务
- RULE-SET,Tencent Video,境内服务
- RULE-SET,Youku,境内服务
- RULE-SET,WeTV,境内服务

 - RULE-SET,Domestic,境内服务
- RULE-SET,Domestic IPs,境内服务

- RULE-SET,LAN,DIRECT
- GEOIP,CN,境内服务
- MATCH,Others

- RULE-SET,Addproxy,扩展代理
- RULE-SET,Addblock,扩展屏蔽

script:
  code: |
    def main(ctx, metadata):
        port_list = [21, 22, 23, 53, 80, 123, 143, 194, 443, 465, 587, 853, 993, 995, 998, 2052, 2053, 2082, 2083, 2086, 2095, 2096, 5222, 5228, 5229, 5230, 8080, 8443, 8880, 8888, 8889]
        ruleset_action = {"Reject": "Reject",
            "Special": "DIRECT",
            "Adblock": "Reject",
            "Netflix": "视频",
            "Spotify": "音乐",
            "Soundcloud": "音乐",
            "YouTube": "YouTube",
            "YouTube Music": "Youtube",
            "WeTV": "境内服务",
            "ABC": "视频",
            "Abema TV": "视频",
            "Amazon": "Amazon",
            "Apple News": "视频",
            "Apple TV": "视频",
            "Bahamut": "视频",
            "BBC iPlayer": "视频",
            "DAZN": "视频",
            "Discovery Plus": "视频",
            "encoreTVB": "视频",
            "Fox Now": "视频",
            "Fox+": "视频",
            "HBO": "视频",
            "Hulu Japan": "视频",
            "Hulu": "视频",
            "Japonx": "视频",
            "JOOX": "视频",
            "KKBOX": "视频",
            "KKTV": "视频",
            "Line TV": "视频",
            "myTV SUPER": "视频",
            "Niconico": "视频",
            "Pandora": "视频",
            "PBS": "视频",
            "Pornhub": "视频",
            "ViuTV": "视频",
            "Disney Plus": "视频",
            "Telegram": "SNS",
            "Discord": "SNS",
            "Facebook": "SNS",
            "Twitter": "SNS",
            "Steam": "Steam",
            "Speedtest": "Speedtest",
            "PayPal": "PayPal",
            "Microsoft": "Microsoft",
            "PROXY": "Proxy",
            "Apple": "Apple",
            "Scholar": "学术",
            "Domestic": "境内服务",
            "Domestic IPs": "境内服务",
            "Addproxy": "扩展代理",
            "Addblock": "扩展屏蔽",
            "LAN": "DIRECT"
            }
        port = int(metadata["dst_port"])
        if port not in port_list:
            return "DIRECT"
        for rule_name in ctx.rule_providers.keys():
            if ctx.rule_providers[rule_name].match(metadata):
                return ruleset_action[rule_name]
        ip = metadata["dst_ip"] or ctx.resolve_ip(metadata["host"])
        if ip == "":
          return "DIRECT"
        code = ctx.geoip(ip)
        if code == "CN":
          return "境内服务"
        return "其它"
rule-providers:
  Reject:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/lhie1/Rules@master/Clash/Provider/Reject.yaml'
    path: ./Rules/Reject
    interval: 86400
  Adblock:
    type: http
    behavior: classical
    url: 'https://raw.githubusercontent.com/LM-Firefly/Rules/master/Clash-RuleSet-Classical/Adblock/Adblock.yaml'
    path: ./Rules/Adblock
    interval: 86400
  Special:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/lhie1/Rules@master/Clash/Provider/Special.yaml'
    path: ./Rules/Special
    interval: 86400
  Netflix:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/lhie1/Rules@master/Clash/Provider/Media/Netflix.yaml'
    path: ./Rules/Media/Netflix
    interval: 86400
  Spotify:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/lhie1/Rules@master/Clash/Provider/Media/Spotify.yaml'
    path: ./Rules/Media/Spotify
    interval: 86400
  YouTube Music:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/lhie1/Rules@master/Clash/Provider/Media/YouTube%20Music.yaml'
    path: ./Rules/Media/YouTube_Music
    interval: 86400
  YouTube:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/lhie1/Rules@master/Clash/Provider/Media/YouTube.yaml'
    path: ./Rules/Media/YouTube
    interval: 86400
  # MOO:
  #   type: http
  #   behavior: classical
  #   url: 'https://cdn.jsdelivr.net/gh/lhie1/Rules@master/Clash/Provider/Media/MOO.yaml'
  #   path: ./Rules/Media/MOO
  #   interval: 86400
  Netease Music:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/lhie1/Rules@master/Clash/Provider/Media/Netease%20Music.yaml'
    path: ./Rules/Media/Netease_Music
    interval: 86400
  WeTV:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/lhie1/Rules@master/Clash/Provider/Media/WeTV.yaml'
    path: ./Rules/Media/WeTV
    interval: 86400
  ABC:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/lhie1/Rules@master/Clash/Provider/Media/ABC.yaml'
    path: ./Rules/Media/ABC
    interval: 86400
  Abema TV:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/lhie1/Rules@master/Clash/Provider/Media/Abema%20TV.yaml'
    path: ./Rules/Media/Abema_TV
    interval: 86400
#  Amazon:
#    type: http
#    behavior: classical
#    url: 'https://cdn.jsdelivr.net/gh/lhie1/Rules@master/Clash/Provider/Media/Amazon.yaml'
#    path: ./Rules/Media/Amazon
#    interval: 86400
  Amazon:
    type: http
    behavior: classical
    url: 'https://raw.githubusercontent.com/zy41501/Rules/main/Provider/Amazon.yaml'
    path: ./Rules/Amazon
    interval: 86400	
  Apple News:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/lhie1/Rules@master/Clash/Provider/Media/Apple%20News.yaml'
    path: ./Rules/Media/Apple_News
    interval: 86400
  Apple TV:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/lhie1/Rules@master/Clash/Provider/Media/Apple%20TV.yaml'
    path: ./Rules/Media/Apple_TV
    interval: 86400
  Bahamut:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/lhie1/Rules@master/Clash/Provider/Media/Bahamut.yaml'
    path: ./Rules/Media/Bahamut
    interval: 86400
  BBC iPlayer:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/lhie1/Rules@master/Clash/Provider/Media/BBC%20iPlayer.yaml'
    path: ./Rules/Media/BBC_iPlayer
    interval: 86400
  DAZN:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/lhie1/Rules@master/Clash/Provider/Media/DAZN.yaml'
    path: ./Rules/Media/DAZN
    interval: 86400
  Discovery Plus:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/lhie1/Rules@master/Clash/Provider/Media/Discovery%20Plus.yaml'
    path: ./Rules/Media/Discovery_Plus
    interval: 86400
  Disney Plus:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/lhie1/Rules@master/Clash/Provider/Media/Disney%20Plus.yaml'
    path: ./Rules/Media/Disney_Plus
    interval: 86400
  encoreTVB:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/lhie1/Rules@master/Clash/Provider/Media/encoreTVB.yaml'
    path: ./Rules/Media/encoreTVB
    interval: 86400
  Fox Now:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/lhie1/Rules@master/Clash/Provider/Media/Fox%20Now.yaml'
    path: ./Rules/Media/Fox_Now
    interval: 86400
  Fox+:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/lhie1/Rules@master/Clash/Provider/Media/Fox%2B.yaml'
    path: ./Rules/Media/Fox+
    interval: 86400
  HBO:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/lhie1/Rules@master/Clash/Provider/Media/HBO.yaml'
    path: ./Rules/Media/HBO
    interval: 86400
  Hulu Japan:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/lhie1/Rules@master/Clash/Provider/Media/Hulu%20Japan.yaml'
    path: ./Rules/Media/Hulu_Japan
    interval: 86400
  Hulu:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/lhie1/Rules@master/Clash/Provider/Media/Hulu.yaml'
    path: ./Rules/Media/Hulu
    interval: 86400
  Japonx:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/lhie1/Rules@master/Clash/Provider/Media/Japonx.yaml'
    path: ./Rules/Media/Japonx
    interval: 86400
  JOOX:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/lhie1/Rules@master/Clash/Provider/Media/JOOX.yaml'
    path: ./Rules/Media/JOOX
    interval: 86400
  KKBOX:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/lhie1/Rules@master/Clash/Provider/Media/KKBOX.yaml'
    path: ./Rules/Media/KKBOX
    interval: 86400
  KKTV:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/lhie1/Rules@master/Clash/Provider/Media/KKTV.yaml'
    path: ./Rules/Media/KKTV
    interval: 86400
  Line TV:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/lhie1/Rules@master/Clash/Provider/Media/Line%20TV.yaml'
    path: ./Rules/Media/Line_TV
    interval: 86400
  myTV SUPER:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/lhie1/Rules@master/Clash/Provider/Media/myTV%20SUPER.yaml'
    path: ./Rules/Media/myTV_SUPER
    interval: 86400
  Pandora:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/lhie1/Rules@master/Clash/Provider/Media/Pandora.yaml'
    path: ./Rules/Media/Pandora
    interval: 86400
  PBS:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/lhie1/Rules@master/Clash/Provider/Media/PBS.yaml'
    path: ./Rules/Media/PBS
    interval: 86400
  Pornhub:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/lhie1/Rules@master/Clash/Provider/Media/Pornhub.yaml'
    path: ./Rules/Media/Pornhub
    interval: 86400
  Soundcloud:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/lhie1/Rules@master/Clash/Provider/Media/Soundcloud.yaml'
    path: ./Rules/Media/Soundcloud
    interval: 86400
  ViuTV:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/lhie1/Rules@master/Clash/Provider/Media/ViuTV.yaml'
    path: ./Rules/Media/ViuTV
    interval: 86400
  Telegram:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/lhie1/Rules@master/Clash/Provider/Telegram.yaml'
    path: ./Rules/SNS/Telegram
    interval: 86400
  Steam:
    type: http
    behavior: classical
    url: 'https://raw.githubusercontent.com/LM-Firefly/Rules/master/Clash-RuleSet-Classical/Game/Steam.yaml'
    path: ./Rules/Steam
    interval: 86400
  Speedtest:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/lhie1/Rules@master/Clash/Provider/Speedtest.yaml'
    path: ./Rules/Speedtest
    interval: 86400
  PayPal:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/lhie1/Rules@master/Clash/Provider/PayPal.yaml'
    path: ./Rules/PayPal
    interval: 86400
  Microsoft:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/lhie1/Rules@master/Clash/Provider/Microsoft.yaml'
    path: ./Rules/Microsoft
    interval: 86400
  PROXY:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/lhie1/Rules@master/Clash/Provider/Proxy.yaml'
    path: ./Rules/Proxy
    interval: 86400
  Domestic:
    type: http
    behavior: classical
    url: 'https://raw.githubusercontent.com/LM-Firefly/Rules/master/Clash-RuleSet-Classical/Domestic.yaml'
    path: ./Rules/Domestic
    interval: 86400
  Apple:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/lhie1/Rules@master/Clash/Provider/Apple.yaml'
    path: ./Rules/Apple
    interval: 86400
  Scholar:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/lhie1/Rules@master/Clash/Provider/Scholar.yaml'
    path: ./Rules/Scholar
    interval: 86400
  Domestic IPs:
    type: http
    behavior: ipcidr
    url: 'https://cdn.jsdelivr.net/gh/lhie1/Rules@master/Clash/Provider/Domestic%20IPs.yaml'
    path: ./Rules/Domestic_IPs
    interval: 86400
  LAN:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/lhie1/Rules@master/Clash/Provider/LAN.yaml'
    path: ./Rules/LAN
    interval: 86400
  Niconico:
    type: http
    behavior: classical
    url: 'https://raw.githubusercontent.com/zy41501/Rules/main/Provider/Media/niconico.yaml'
    path: ./Rules/Media/Niconico
    interval: 86400
  Discord:
    type: http
    behavior: classical
    url: 'https://raw.githubusercontent.com/LM-Firefly/Rules/master/Clash-RuleSet-Classical/PROXY/Discord.yaml'
    path: ./Rules/SNS/Discord
    interval: 86400
  Facebook:
    type: http
    behavior: classical
    url: 'https://raw.githubusercontent.com/LM-Firefly/Rules/master/Clash-RuleSet-Classical/PROXY/Facebook.yaml'
    path: ./Rules/SNS/Facebook
    interval: 86400
    interval: 86400
  Twitter:
    type: http
    behavior: classical
    url: 'https://raw.githubusercontent.com/LM-Firefly/Rules/master/Clash-RuleSet-Classical/PROXY/Twitter.yaml'
    path: ./Rules/SNS/Twitter
    interval: 86400
  Addproxy:
    type: http
    behavior: classical
    url: 'https://raw.githubusercontent.com/zy41501/Rules/main/Provider/addproxy.yaml'
    path: ./Rules/Addproxy
    interval: 86400
  Addblock:
    type: http
    behavior: classical
    url: 'https://raw.githubusercontent.com/zy41501/Rules/main/Provider/addblock.yaml'
    path: ./Rules/Addblock
    interval: 86400	